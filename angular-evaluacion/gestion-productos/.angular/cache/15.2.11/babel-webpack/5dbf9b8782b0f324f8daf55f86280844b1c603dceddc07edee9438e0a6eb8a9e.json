{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.tokenKey = 'authToken';\n    this.apiUrl = 'http://localhost:3000/api/login'; // Ruta al backend\n  }\n\n  login(username, password) {\n    return this.http.post(this.apiUrl, {\n      username,\n      password\n    });\n  }\n  logout() {\n    localStorage.removeItem(this.tokenKey);\n  }\n  isAuthenticated() {\n    return !!localStorage.getItem(this.tokenKey);\n  }\n  getToken() {\n    return localStorage.getItem(this.tokenKey);\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,aAAQ,GAAG,WAAW;IACtB,WAAM,GAAG,iCAAiC,CAAC,CAAC;EAEb;;EAEvCC,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,IAAI,CAACC,MAAM,EAAE;MAAEH,QAAQ;MAAEC;IAAQ,CAAE,CAAC;EACjE;EAEAG,MAAM;IACJC,YAAY,CAACC,UAAU,CAAC,IAAI,CAACC,QAAQ,CAAC;EACxC;EAEAC,eAAe;IACb,OAAO,CAAC,CAACH,YAAY,CAACI,OAAO,CAAC,IAAI,CAACF,QAAQ,CAAC;EAC9C;EAEAG,QAAQ;IACN,OAAOL,YAAY,CAACI,OAAO,CAAC,IAAI,CAACF,QAAQ,CAAC;EAC5C;;;uBApBWX,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAe,SAAXf,WAAW;MAAAgB,YAFV;IAAM;EAAA","names":["AuthService","constructor","http","login","username","password","post","apiUrl","logout","localStorage","removeItem","tokenKey","isAuthenticated","getItem","getToken","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\Pruebas\\Oncredit\\gestion-productos\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private tokenKey = 'authToken';\n  private apiUrl = 'http://localhost:3000/api/login'; // Ruta al backend\n\n  constructor(private http: HttpClient) {}\n\n  login(username: string, password: string): Observable<any> {\n    return this.http.post<any>(this.apiUrl, { username, password });\n  }\n\n  logout(): void {\n    localStorage.removeItem(this.tokenKey);\n  }\n\n  isAuthenticated(): boolean {\n    return !!localStorage.getItem(this.tokenKey);\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem(this.tokenKey);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}