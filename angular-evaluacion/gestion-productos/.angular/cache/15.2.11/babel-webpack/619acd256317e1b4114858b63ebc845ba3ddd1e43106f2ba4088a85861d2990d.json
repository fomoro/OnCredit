{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction AppComponent_nav_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"nav\")(1, \"a\", 1);\n    i0.ɵɵtext(2, \"Lista de Productos\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"a\", 2);\n    i0.ɵɵtext(4, \"Agregar Producto\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AppComponent_nav_0_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.logout());\n    });\n    i0.ɵɵtext(6, \"Cerrar sesi\\u00F3n\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class AppComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.title = 'gestion-productos';\n  }\n  // Verificar si el usuario está autenticado\n  isAuthenticated() {\n    return this.authService.isAuthenticated();\n  }\n  // Método para cerrar sesión\n  logout() {\n    this.authService.logout(); // Elimina el token\n    this.router.navigate(['/login']); // Redirige a la página de login\n  }\n\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 2,\n      vars: 1,\n      consts: [[4, \"ngIf\"], [\"routerLink\", \"/products\", 1, \"btn\", \"btn-link\"], [\"routerLink\", \"/add-product\", 1, \"btn\", \"btn-link\"], [1, \"btn\", \"btn-link\", 3, \"click\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, AppComponent_nav_0_Template, 7, 0, \"nav\", 0);\n          i0.ɵɵelement(1, \"router-outlet\");\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.isAuthenticated());\n        }\n      },\n      dependencies: [i3.NgIf, i2.RouterOutlet, i2.RouterLink],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":";;;;;;;IAAAA,2BAA+B;IACkBA,kCAAkB;IAAAA,iBAAI;IACrEA,4BAAkD;IAAAA,gCAAgB;IAAAA,iBAAI;IACtEA,iCAAgD;IAAnBA;MAAAA;MAAA;MAAA,OAASA,8BAAQ;IAAA,EAAC;IAACA,kCAAa;IAAAA,iBAAS;;;ACMxE,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;IAF5D,UAAK,GAAG,mBAAmB;EAE4C;EAEvE;EACAC,eAAe;IACb,OAAO,IAAI,CAACF,WAAW,CAACE,eAAe,EAAE;EAC3C;EAEA;EACAC,MAAM;IACJ,IAAI,CAACH,WAAW,CAACG,MAAM,EAAE,CAAC,CAAC;IAC3B,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC;;;;uBAdWN,YAAY;IAAA;EAAA;;;YAAZA,YAAY;MAAAO;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UDTzBZ,6DAIM;UAENA,gCAA+B;;;UANzBA,4CAAuB","names":["i0","AppComponent","constructor","authService","router","isAuthenticated","logout","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\Pruebas\\Oncredit\\gestion-productos\\src\\app\\app.component.html","C:\\Users\\user\\Downloads\\Pruebas\\Oncredit\\gestion-productos\\src\\app\\app.component.ts"],"sourcesContent":["<nav *ngIf=\"isAuthenticated()\">\n  <a routerLink=\"/products\" class=\"btn btn-link\">Lista de Productos</a>\n  <a routerLink=\"/add-product\" class=\"btn btn-link\">Agregar Producto</a>\n  <button class=\"btn btn-link\" (click)=\"logout()\">Cerrar sesión</button>\n</nav>\n\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'gestion-productos';\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  // Verificar si el usuario está autenticado\n  isAuthenticated(): boolean {\n    return this.authService.isAuthenticated();\n  }\n\n  // Método para cerrar sesión\n  logout(): void {\n    this.authService.logout(); // Elimina el token\n    this.router.navigate(['/login']); // Redirige a la página de login\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}