{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class HighlightPriceDirective {\n  set appHighlightPrice(price) {\n    let numericPrice;\n    if (typeof price === 'string') {\n      numericPrice = Number(price);\n      if (isNaN(numericPrice)) {\n        numericPrice = 0; // Or handle the NaN case appropriately\n      }\n    } else {\n      numericPrice = price;\n    }\n    // ... rest of your directive logic using numericPrice ...\n    if (numericPrice > 100) {\n      this.renderer.setStyle(this.el.nativeElement, 'color', 'red');\n    }\n  }\n  constructor(el, renderer) {\n    this.el = el;\n    this.renderer = renderer;\n  }\n  static {\n    this.ɵfac = function HighlightPriceDirective_Factory(t) {\n      return new (t || HighlightPriceDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n    };\n  }\n  static {\n    this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: HighlightPriceDirective,\n      selectors: [[\"\", \"appHighlightPrice\", \"\"]],\n      inputs: {\n        appHighlightPrice: \"appHighlightPrice\"\n      }\n    });\n  }\n}","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,uBAAuB;EAElC,IAAaC,iBAAiB,CAACC,KAAsB;IACnD,IAAIC,YAAoB;IACxB,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAAE;MAC7BC,YAAY,GAAGC,MAAM,CAACF,KAAK,CAAC;MAC5B,IAAIG,KAAK,CAACF,YAAY,CAAC,EAAE;QACvBA,YAAY,GAAG,CAAC,CAAC,CAAC;;KAErB,MAAM;MACLA,YAAY,GAAGD,KAAK;;IAEtB;IACA,IAAIC,YAAY,GAAG,GAAG,EAAE;MACtB,IAAI,CAACG,QAAQ,CAACC,QAAQ,CAAC,IAAI,CAACC,EAAE,CAACC,aAAa,EAAE,OAAO,EAAE,KAAK,CAAC;;EAEjE;EAEAC,YAAoBF,EAAc,EAAUF,QAAmB;IAA3C,OAAE,GAAFE,EAAE;IAAsB,aAAQ,GAARF,QAAQ;EAAe;;;uBAlBxDN,uBAAuB;IAAA;EAAA;;;YAAvBA,uBAAuB;MAAAW;MAAAC;QAAAX;MAAA;IAAA;EAAA","names":["HighlightPriceDirective","appHighlightPrice","price","numericPrice","Number","isNaN","renderer","setStyle","el","nativeElement","constructor","selectors","inputs"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\Pruebas\\Oncredit\\gestion-productos\\src\\app\\directives\\highlight-price.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appHighlightPrice]'\n})\nexport class HighlightPriceDirective {\n\n  @Input() set appHighlightPrice(price: number | string) {\n    let numericPrice: number;\n    if (typeof price === 'string') {\n      numericPrice = Number(price);\n      if (isNaN(numericPrice)) {\n        numericPrice = 0; // Or handle the NaN case appropriately\n      }\n    } else {\n      numericPrice = price;\n    }\n    // ... rest of your directive logic using numericPrice ...\n    if (numericPrice > 100) {\n      this.renderer.setStyle(this.el.nativeElement, 'color', 'red');\n    }\n  }\n\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}