{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/product.service\";\nimport * as i3 from \"@angular/common\";\nfunction ProductFormComponent_option_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(category_r1);\n  }\n}\nexport class ProductFormComponent {\n  constructor(fb, productService) {\n    this.fb = fb;\n    this.productService = productService;\n    this.categories = ['Categoría A', 'Categoría B', 'Categoría C'];\n    this.productForm = this.fb.group({\n      name: ['', Validators.required],\n      price: ['', [Validators.required, Validators.min(0.01)]],\n      category: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.productForm.valid) {\n      this.productService.addProduct(this.productForm.value).subscribe(response => {\n        console.log('Producto agregado:', response);\n      });\n    }\n  }\n  static {\n    this.ɵfac = function ProductFormComponent_Factory(t) {\n      return new (t || ProductFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProductFormComponent,\n      selectors: [[\"app-product-form\"]],\n      decls: 13,\n      vars: 3,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\"], [\"for\", \"price\"], [\"id\", \"price\", \"type\", \"number\", \"formControlName\", \"price\", \"required\", \"\"], [\"for\", \"category\"], [\"id\", \"category\", \"formControlName\", \"category\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]],\n      template: function ProductFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function ProductFormComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"label\", 1);\n          i0.ɵɵtext(2, \"Nombre:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"input\", 2);\n          i0.ɵɵelementStart(4, \"label\", 3);\n          i0.ɵɵtext(5, \"Precio:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"input\", 4);\n          i0.ɵɵelementStart(7, \"label\", 5);\n          i0.ɵɵtext(8, \"Categor\\u00EDa:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"select\", 6);\n          i0.ɵɵtemplate(10, ProductFormComponent_option_10_Template, 2, 2, \"option\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"button\", 8);\n          i0.ɵɵtext(12, \"Agregar Producto\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.productForm);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.productForm.invalid);\n        }\n      },\n      dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICQ/DC,iCAA+D;IAAAA,YAAc;IAAAA,iBAAS;;;;IAA1CA,mCAAkB;IAACA,eAAc;IAAdA,iCAAc;;;ADAjF,OAAM,MAAOC,oBAAoB;EAI/BC,YAAoBC,EAAe,EAAUC,cAA8B;IAAvD,OAAE,GAAFD,EAAE;IAAuB,mBAAc,GAAdC,cAAc;IAF3D,eAAU,GAAG,CAAC,aAAa,EAAE,aAAa,EAAE,aAAa,CAAC;IAGxD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC/BC,IAAI,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACS,QAAQ,EAAET,UAAU,CAACW,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;MACxDC,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACS,QAAQ;KACnC,CAAC;EACJ;EAEAI,QAAQ;IACN,IAAI,IAAI,CAACP,WAAW,CAACQ,KAAK,EAAE;MAC1B,IAAI,CAACT,cAAc,CAACU,UAAU,CAAC,IAAI,CAACT,WAAW,CAACU,KAAK,CAAC,CAACC,SAAS,CAACC,QAAQ,IAAG;QAC1EC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,QAAQ,CAAC;MAC7C,CAAC,CAAC;;EAEN;;;uBAlBWhB,oBAAoB;IAAA;EAAA;;;YAApBA,oBAAoB;MAAAmB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCTjCxB,+BAAwD;UAAxBA;YAAA,OAAYyB,cAAU;UAAA,EAAC;UACrDzB,gCAAkB;UAAAA,uBAAO;UAAAA,iBAAQ;UACjCA,2BAAiD;UAEjDA,gCAAmB;UAAAA,uBAAO;UAAAA,iBAAQ;UAClCA,2BAAiE;UAEjEA,gCAAsB;UAAAA,+BAAU;UAAAA,iBAAQ;UACxCA,iCAA0D;UACxDA,6EAAsF;UACxFA,iBAAS;UAETA,kCAAuD;UAAAA,iCAAgB;UAAAA,iBAAS;;;UAZ5EA,2CAAyB;UASEA,gBAAa;UAAbA,wCAAa;UAGtBA,eAAgC;UAAhCA,kDAAgC","names":["Validators","i0","ProductFormComponent","constructor","fb","productService","productForm","group","name","required","price","min","category","onSubmit","valid","addProduct","value","subscribe","response","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\Pruebas\\Oncredit\\gestion-productos\\src\\app\\components\\product-form\\product-form.component.ts","C:\\Users\\user\\Downloads\\Pruebas\\Oncredit\\gestion-productos\\src\\app\\components\\product-form\\product-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ProductService } from '../../services/product.service';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.scss']\n})\nexport class ProductFormComponent {\n  productForm: FormGroup;\n  categories = ['Categoría A', 'Categoría B', 'Categoría C'];\n\n  constructor(private fb: FormBuilder, private productService: ProductService) {\n    this.productForm = this.fb.group({\n      name: ['', Validators.required],\n      price: ['', [Validators.required, Validators.min(0.01)]],\n      category: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.productForm.valid) {\n      this.productService.addProduct(this.productForm.value).subscribe(response => {\n        console.log('Producto agregado:', response);\n      });\n    }\n  }\n}","<form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit()\">\n  <label for=\"name\">Nombre:</label>\n  <input id=\"name\" formControlName=\"name\" required>\n\n  <label for=\"price\">Precio:</label>\n  <input id=\"price\" type=\"number\" formControlName=\"price\" required>\n\n  <label for=\"category\">Categoría:</label>\n  <select id=\"category\" formControlName=\"category\" required>\n    <option *ngFor=\"let category of categories\" [value]=\"category\">{{ category }}</option>\n  </select>\n\n  <button type=\"submit\" [disabled]=\"productForm.invalid\">Agregar Producto</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}