{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nexport class LoginComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const {\n        username,\n        password\n      } = this.loginForm.value;\n      if (this.authService.login(username, password)) {\n        this.router.navigate(['/products']);\n      } else {\n        alert('Credenciales inválidas');\n      }\n    }\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 9,\n      vars: 2,\n      consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"username\"], [\"id\", \"username\", \"formControlName\", \"username\", \"required\", \"\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"label\", 1);\n          i0.ɵɵtext(2, \"Usuario:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"input\", 2);\n          i0.ɵɵelementStart(4, \"label\", 3);\n          i0.ɵɵtext(5, \"Contrase\\u00F1a:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"input\", 4);\n          i0.ɵɵelementStart(7, \"button\", 5);\n          i0.ɵɵtext(8, \"Iniciar Sesi\\u00F3n\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n        }\n      },\n      dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AASnE,OAAM,MAAOC,cAAc;EAGzBC,YACUC,EAAe,EACfC,WAAwB,EACxBC,MAAc;IAFd,OAAE,GAAFF,EAAE;IACF,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IAEd,IAAI,CAACC,SAAS,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACnCC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ;KACnC,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,IAAI,CAACL,SAAS,CAACM,KAAK,EAAE;MACxB,MAAM;QAAEJ,QAAQ;QAAEE;MAAQ,CAAE,GAAG,IAAI,CAACJ,SAAS,CAACO,KAAK;MACnD,IAAI,IAAI,CAACT,WAAW,CAACU,KAAK,CAACN,QAAQ,EAAEE,QAAQ,CAAC,EAAE;QAC9C,IAAI,CAACL,MAAM,CAACU,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;OACpC,MAAM;QACLC,KAAK,CAAC,wBAAwB,CAAC;;;EAGrC;;;uBAvBWf,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAAgB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCV3BC,+BAAsD;UAAxBA;YAAA,OAAYC,cAAU;UAAA,EAAC;UACnDD,gCAAsB;UAAAA,wBAAQ;UAAAA,iBAAQ;UACtCA,2BAAyD;UAEzDA,gCAAsB;UAAAA,gCAAW;UAAAA,iBAAQ;UACzCA,2BAAyE;UAEzEA,iCAAqD;UAAAA,mCAAc;UAAAA,iBAAS;;;UAPxEA,yCAAuB;UAOLA,eAA8B;UAA9BA,gDAA8B","names":["Validators","LoginComponent","constructor","fb","authService","router","loginForm","group","username","required","password","onSubmit","valid","value","login","navigate","alert","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\user\\Downloads\\Pruebas\\Oncredit\\gestion-productos\\src\\app\\components\\login\\login.component.ts","C:\\Users\\user\\Downloads\\Pruebas\\Oncredit\\gestion-productos\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  loginForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router\n  ) {\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.loginForm.valid) {\n      const { username, password } = this.loginForm.value;\n      if (this.authService.login(username, password)) {\n        this.router.navigate(['/products']);\n      } else {\n        alert('Credenciales inválidas');\n      }\n    }\n  }\n}","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  <label for=\"username\">Usuario:</label>\n  <input id=\"username\" formControlName=\"username\" required>\n\n  <label for=\"password\">Contraseña:</label>\n  <input id=\"password\" type=\"password\" formControlName=\"password\" required>\n\n  <button type=\"submit\" [disabled]=\"loginForm.invalid\">Iniciar Sesión</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}